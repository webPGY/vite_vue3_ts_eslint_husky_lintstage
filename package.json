{
  "name": "vite-demo",
  "private": true,
  "version": "0.0.0",
  "main": "electron/main.js",
  "author": {
    "name": "pengff",
    "email": "pengff@pengff.com.cn"
  },
  "description": "pengff",
  "scripts": {
    "prepare": "npx husky install",
    "clear": "npx rimraf install && rimraf ./node_modules",
    "commit": "git add . && git-cz",
    "dev": "vite",
    "electron:icon": "electron-icon-maker --input=./src/assets/icon.png --output=./build",
    "electron": "vite | electron .",
    "electron:build": "vite build && electron-builder",
    "lint": "eslint . -c .js,.mjs,.cjs,.ts,.vue --fix --ignore-pattern .gitignore",
    "lint:fix": "eslint . --fix",
    "lint:lint-staged": "lint-staged",
    "build": "vue-tsc -b && vite build",
    "build:test": "vite build --mode test",
    "build:prod": "vite build --mode prod",
    "preview": "vite preview"
  },
  "dependencies": {
    "@commitlint/config-conventional": "^19.4.1",
    "@electron-toolkit/preload": "^3.0.1",
    "@electron-toolkit/utils": "^3.0.0",
    "@eslint/eslintrc": "^3.1.0",
    "@vitejs/plugin-vue-jsx": "^4.0.1",
    "autoprefixer": "^10.4.20",
    "axios": "^1.7.7",
    "electron-icon-maker": "^0.0.5",
    "electron-store": "^7.0.3",
    "element-plus": "^2.8.1",
    "eslint-config-standard": "^17.1.0",
    "fingerprintjs2": "^2.1.4",
    "husky": "^9.1.5",
    "lint-staged": "^15.2.10",
    "pinia": "^2.2.2",
    "postcss-pxtorem": "^6.1.0",
    "prettier": "^3.3.3",
    "sass": "^1.78.0",
    "sass-loader": "^16.0.1",
    "terser": "^5.31.6",
    "vite-plugin-eslint": "^1.8.1",
    "vue": "^3.4.37",
    "vue-i18n": "^9.14.0",
    "vue-router": "^4.4.3"
  },
  "engines": {
    "node": ">=18.18.0"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.4.1",
    "@eslint/js": "^9.9.1",
    "@types/fingerprintjs2": "^2.0.0",
    "@types/node": "^20.14.15",
    "@typescript-eslint/eslint-plugin": "^5.62.0",
    "@typescript-eslint/parser": "^5.62.0",
    "@vitejs/plugin-vue": "^5.1.2",
    "commitizen": "^4.3.0",
    "commitlint-config-cz": "^0.13.3",
    "cz-customizable": "^7.2.1",
    "electron": "^32.0.2",
    "electron-builder": "^23.6.0",
    "eslint": "^9.9.1",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-prettier": "^5.2.1",
    "eslint-plugin-vue": "^9.28.0",
    "globals": "^15.9.0",
    "husky": "^8.0.0",
    "typescript": "^5.5.3",
    "typescript-eslint": "^8.4.0",
    "unplugin-auto-import": "^0.18.2",
    "unplugin-vue-components": "^0.27.4",
    "vite": "^5.4.1",
    "vue-tsc": "^2.0.29"
  },
  "build": {
    "appId": "pengff.first.app",
    "productName": "ElectronApp",
    "copyright": "Copyright Â© 2024 pengff",
    "directories": {
      "output": "dist_electron"
    },
    "win": {
      "icon": "./build/icons/win/icon.ico",
      "target": [
        {
          "target": "nsis",
          "arch": [
            "x64"
          ]
        }
      ]
    },
    "dmg": {
      "contents": [
        {
          "x": 410,
          "y": 150,
          "type": "link",
          "path": "/Applications"
        },
        {
          "x": 130,
          "y": 150,
          "type": "file"
        }
      ]
    },
    "linux": {
      "icon": "./build/icons/win/icon.ico",
      "target": "AppImage"
    },
    "mac": {
      "icon": "./build/icons/mac/icon.icns"
    },
    "files": [
      "./dist",
      "./electron",
      "!**/node_modules/**"
    ],
    "asar": false,
    "nsis": {
      "oneClick": false,
      "allowElevation": true,
      "allowToChangeInstallationDirectory": true,
      "installerIcon": "./build/icons/win/icon.ico",
      "uninstallerIcon": "./build/icons/win/icon.ico",
      "installerHeaderIcon": "./build/icons/win/icon.ico",
      "createDesktopShortcut": true,
      "createStartMenuShortcut": true
    }
  },
  "commitizen": {
    "path": "./node_modules/cz-customizable"
  },
  "cz-customizable": {
    "config": ".cz-config.cjs"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.{js,mjs,cjs,ts,vue}": "eslint . src/ --fix"
  }
}